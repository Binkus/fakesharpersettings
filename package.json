{
	"name": "fakesharpersettings",
	"publisher": "TwoUnderscorez",
	"displayName": "fakesharpersettings",
	"description": "ReSharper features for Visual Studio Code",
	"version": "0.3.0",
	"preview": true,
	"icon": "assets/icon.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/twounderscorez/fakesharpersettings"
	},
	"engines": {
		"vscode": "^1.22.0"
	},
	"categories": [
		"Formatters",
		"Linters"
	],
	"keywords": [
		"C#",
		"csharp",
		".NET",
		".NET Core",
		"ASP.NET",
		"dotnet",
		"resharper"
	],
	"activationEvents": [
		"workspaceContains:**/*.sln",
		"onCommand:fakesharper.inspectcode",
		"onCommand:fakesharper.cleandiagnostics",
		"onCommand:fakesharper.cleanalldiagnostics",
		"onCommand:fakesharper.cleanupcode",
		"onCommand:fakesharper.reloaddiagnostics"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "fakesharpersettings.inspectcode",
				"title": "[fakesharpersettings] Inspect Code"
			},
			{
				"command": "fakesharpersettings.cleandiagnostics",
				"title": "[fakesharpersettings] Clean Diagnostics"
			},
			{
				"command": "fakesharpersettings.cleanalldiagnostics",
				"title": "[fakesharpersettings] Clean All Diagnostics"
			},
			{
				"command": "fakesharpersettings.cleanupcode",
				"title": "[fakesharpersettings] Cleanup Code"
			},
			{
				"command": "fakesharpersettings.reloaddiagnostics",
				"title": "[fakesharpersettings] Reload Diagnostics"
			},
			{
				"command": "fakesharpersettings.dupfinder.run",
				"title": "[fakesharpersettings] Run Dupfinder"
			},
			{
				"command": "fakesharpersettings.dupfinder.clean",
				"title": "[fakesharpersettings] Clean Duplicates"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "fakesharpersettings",
					"title": "fakesharpersettings",
					"icon": "resources/icon/csharp.svg"
				}
			]
		},
		"views": {
			"fakesharper": [
				{
					"id": "fakesharpersettings.dupfinder",
					"name": "Dupfinder"
				}
			]
		},
		"menus": {
			"view/title": [
				{
					"command": "fakesharper.dupfinder.run",
					"when": "view == dupfinder",
					"group": "dupfinder"
				},
				{
					"command": "fakesharper.dupfinder.clean",
					"when": "view == dupfinder",
					"group": "dupfinder"
				},
				{
					"command": "fakesharper.cleanupcode",
					"when": "view == dupfinder",
					"group": "cleanupcode"
				},
				{
					"command": "fakesharper.inspectcode",
					"when": "view == dupfinder",
					"group": "inspectcode"
				},
				{
					"command": "fakesharper.cleanalldiagnostics",
					"when": "view == dupfinder",
					"group": "inspectcode"
				}
			]
		},
		"configuration": [
			{
				"title": "R# CLI Configuration",
				"properties": {
					"fakesharpersettings.cleanupcode": {
						"type": "object",
						"default": {},
						"description": "CLI args for code cleanup",
						"properties": {
							"ConfigPath": {
								"type": "string",
								"default": "",
								"description": "Path to configuration file here parameters are specified (use 'config-create' option to create sample file)"
							},
							"SettingsPath": {
								"type": "string",
								"default": "",
								"description": "Path to the file to use custom settings from (default: Use R#'s solution shared settings if exists)."
							},
							"ProfileName": {
								"type": "string",
								"default": "",
								"description": "Name of the code cleanup profile. Full cleanup profile is used if nothing specified."
							},
							"Verbosity": {
								"type": "string",
								"default": "",
								"description": "Display this amount of information in the log",
								"enum": [
									"OFF",
									"FATAL",
									"ERROR",
									"WARN",
									"INFO",
									"VERBOSE",
									"TRACE"
								]
							},
							"Toolset": {
								"type": "string",
								"default": "",
								"description": "MsBuild toolset version. Highest available is used by default. Example: --toolset=12.0."
							},
							"ToolsetPath": {
								"type": "string",
								"default": "",
								"description": "MsBuild toolset (exe/dll) path. Example: --dotnetcore=/usr/local/msbuild/bin/current/MSBuild.exe"
							},
							"MonoPath": {
								"type": "string",
								"default": "Mono path. Empty to ignore Mono. Not specified for autodetect. Example: --mono=/Library/Frameworks/Mono.framework/Versions/Current/bin/mono."
							},
							"DotnetCorePath": {
								"type": "string",
								"default": ".NET Core path. Empty to ignore .NET Core. Not specified for autodetect. Example: --dotnetcore=/usr/local/share/dotnet/dotnet."
							},
							"DotnetCoreSdk": {
								"type": "string",
								"default": ".NET Core SDK version. Example: --dotnetcoresdk=3.0.100."
							},
							"DisableSettingsLayer": {
								"type": "string",
								"default": "Disable specified settings layers. Possible values: GlobalAll, GlobalPerProduct, SolutionShared, SolutionPersonal, ProjectShared, ProjectPersonal."
							},
							"CachesHomePath": {
								"type": "string",
								"default": " Path to the directory where produced caches will be stored."
							},
							"MsBuildProperties": {
								"type": "string",
								"default": " MSBuild properties."
							},
							"TargetForReference": {
								"type": "string",
								"default": "MSBuild targets. These targets will be executed to get referenced assemblies of projects.."
							},
							"TargetsForItems": {
								"type": "string",
								"default": "MSBuild targets. These targets will be executed to get other items (e.g. Compile item) of projects.."
							},
							"Extensions": {
								"type": "string",
								"default": "Install and use specified extensions."
							},
							"Debug": {
								"type": "boolean",
								"default": "False",
								"description": "Show debugging messages (default: False)."
							},
							"IncludePaths": {
								"type": "array",
								"default": [],
								"description": "Array of relative paths that defines which files should be cleaned up. Might contains single ('*') and double ('**') wildcards.."
							},
							"ExcludePaths": {
								"type": "array",
								"default": [],
								"description": "Array of relative paths that defines which files should not be cleaned up. Might contains single ('*') and double ('**') wildcards. If defined along with 'included' takes higher priority')."
							}
						}
					}
				}
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "yarn run compile",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"pretest": "yarn run compile && yarn run lint",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/mocha": "^7.0.1",
		"@types/node": "^12.11.7",
		"@types/vscode": "^1.31.0",
		"@typescript-eslint/eslint-plugin": "^2.18.0",
		"@typescript-eslint/parser": "^2.18.0",
		"eslint": "^6.8.0",
		"glob": "^7.1.6",
		"mocha": "^7.0.1",
		"typescript": "^3.7.5",
		"vscode-test": "^1.3.0"
	},
	"dependencies": {
		"fast-xml-parser": "^3.16.0"
	}
}